/*
* generated by Xtext
*/
package fr.istic.idm.project.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.istic.idm.project.services.UIDslGrammarAccess;

public class UIDslParser extends AbstractContentAssistParser {
	
	@Inject
	private UIDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.istic.idm.project.ui.contentassist.antlr.internal.InternalUIDslParser createParser() {
		fr.istic.idm.project.ui.contentassist.antlr.internal.InternalUIDslParser result = new fr.istic.idm.project.ui.contentassist.antlr.internal.InternalUIDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPollAccess().getGroup(), "rule__Poll__Group__0");
					put(grammarAccess.getQuestionAccess().getGroup(), "rule__Question__Group__0");
					put(grammarAccess.getOptionAccess().getGroup(), "rule__Option__Group__0");
					put(grammarAccess.getOptionAccess().getGroup_0(), "rule__Option__Group_0__0");
					put(grammarAccess.getCheckBoxAccess().getGroup(), "rule__CheckBox__Group__0");
					put(grammarAccess.getRadioButtonAccess().getGroup(), "rule__RadioButton__Group__0");
					put(grammarAccess.getComboBoxAccess().getGroup(), "rule__ComboBox__Group__0");
					put(grammarAccess.getTextBoxAccess().getGroup(), "rule__TextBox__Group__0");
					put(grammarAccess.getImageAccess().getGroup(), "rule__Image__Group__0");
					put(grammarAccess.getPollSystemAccess().getPollsAssignment(), "rule__PollSystem__PollsAssignment");
					put(grammarAccess.getPollAccess().getNameAssignment_1(), "rule__Poll__NameAssignment_1");
					put(grammarAccess.getPollAccess().getQuestionsAssignment_3(), "rule__Poll__QuestionsAssignment_3");
					put(grammarAccess.getQuestionAccess().getIdAssignment_1(), "rule__Question__IdAssignment_1");
					put(grammarAccess.getQuestionAccess().getOptionsAssignment_4(), "rule__Question__OptionsAssignment_4");
					put(grammarAccess.getOptionAccess().getIdAssignment_0_0(), "rule__Option__IdAssignment_0_0");
					put(grammarAccess.getOptionAccess().getTypeAssignment_1(), "rule__Option__TypeAssignment_1");
					put(grammarAccess.getCheckBoxAccess().getCheckBoxAssignment_0(), "rule__CheckBox__CheckBoxAssignment_0");
					put(grammarAccess.getCheckBoxAccess().getDefaultAssignment_2(), "rule__CheckBox__DefaultAssignment_2");
					put(grammarAccess.getRadioButtonAccess().getRadioButtonAssignment_0(), "rule__RadioButton__RadioButtonAssignment_0");
					put(grammarAccess.getRadioButtonAccess().getDefaultAssignment_2(), "rule__RadioButton__DefaultAssignment_2");
					put(grammarAccess.getComboBoxAccess().getComboBoxAssignment_0(), "rule__ComboBox__ComboBoxAssignment_0");
					put(grammarAccess.getComboBoxAccess().getDefaultAssignment_2(), "rule__ComboBox__DefaultAssignment_2");
					put(grammarAccess.getTextBoxAccess().getTextBoxAssignment_0(), "rule__TextBox__TextBoxAssignment_0");
					put(grammarAccess.getTextBoxAccess().getDefaultAssignment_2(), "rule__TextBox__DefaultAssignment_2");
					put(grammarAccess.getImageAccess().getDefaultAssignment_2(), "rule__Image__DefaultAssignment_2");
					put(grammarAccess.getImageAccess().getUrlAssignment_3(), "rule__Image__UrlAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.istic.idm.project.ui.contentassist.antlr.internal.InternalUIDslParser typedParser = (fr.istic.idm.project.ui.contentassist.antlr.internal.InternalUIDslParser) parser;
			typedParser.entryRulePollSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public UIDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(UIDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
