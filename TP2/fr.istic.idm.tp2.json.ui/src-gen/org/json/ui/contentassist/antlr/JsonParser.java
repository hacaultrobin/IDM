/*
* generated by Xtext
*/
package org.json.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.json.services.JsonGrammarAccess;

public class JsonParser extends AbstractContentAssistParser {
	
	@Inject
	private JsonGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.json.ui.contentassist.antlr.internal.InternalJsonParser createParser() {
		org.json.ui.contentassist.antlr.internal.InternalJsonParser result = new org.json.ui.contentassist.antlr.internal.InternalJsonParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getJsonPollSystemAccess().getGroup(), "rule__JsonPollSystem__Group__0");
					put(grammarAccess.getArrayJsonPollAccess().getGroup(), "rule__ArrayJsonPoll__Group__0");
					put(grammarAccess.getArrayJsonPollAccess().getGroup_2(), "rule__ArrayJsonPoll__Group_2__0");
					put(grammarAccess.getJsonPollAccess().getGroup(), "rule__JsonPoll__Group__0");
					put(grammarAccess.getJsonPollAccess().getGroup_1(), "rule__JsonPoll__Group_1__0");
					put(grammarAccess.getArrayJsonQuestionAccess().getGroup(), "rule__ArrayJsonQuestion__Group__0");
					put(grammarAccess.getArrayJsonQuestionAccess().getGroup_2(), "rule__ArrayJsonQuestion__Group_2__0");
					put(grammarAccess.getJsonQuestionAccess().getGroup(), "rule__JsonQuestion__Group__0");
					put(grammarAccess.getJsonQuestionAccess().getGroup_4(), "rule__JsonQuestion__Group_4__0");
					put(grammarAccess.getArrayJsonOptionAccess().getGroup(), "rule__ArrayJsonOption__Group__0");
					put(grammarAccess.getArrayJsonOptionAccess().getGroup_2(), "rule__ArrayJsonOption__Group_2__0");
					put(grammarAccess.getJsonOptionAccess().getGroup(), "rule__JsonOption__Group__0");
					put(grammarAccess.getJsonOptionAccess().getGroup_1(), "rule__JsonOption__Group_1__0");
					put(grammarAccess.getArrayJsonPollAccess().getPollsAssignment_1(), "rule__ArrayJsonPoll__PollsAssignment_1");
					put(grammarAccess.getArrayJsonPollAccess().getPollsAssignment_2_1(), "rule__ArrayJsonPoll__PollsAssignment_2_1");
					put(grammarAccess.getJsonPollAccess().getNameAssignment_1_2(), "rule__JsonPoll__NameAssignment_1_2");
					put(grammarAccess.getJsonPollAccess().getQuestionsAssignment_4(), "rule__JsonPoll__QuestionsAssignment_4");
					put(grammarAccess.getArrayJsonQuestionAccess().getQuestionAssignment_1(), "rule__ArrayJsonQuestion__QuestionAssignment_1");
					put(grammarAccess.getArrayJsonQuestionAccess().getQuestionAssignment_2_1(), "rule__ArrayJsonQuestion__QuestionAssignment_2_1");
					put(grammarAccess.getJsonQuestionAccess().getNameAssignment_4_2(), "rule__JsonQuestion__NameAssignment_4_2");
					put(grammarAccess.getJsonQuestionAccess().getTextAssignment_7(), "rule__JsonQuestion__TextAssignment_7");
					put(grammarAccess.getJsonQuestionAccess().getOptionsAssignment_11(), "rule__JsonQuestion__OptionsAssignment_11");
					put(grammarAccess.getArrayJsonOptionAccess().getOptionAssignment_1(), "rule__ArrayJsonOption__OptionAssignment_1");
					put(grammarAccess.getArrayJsonOptionAccess().getOptionAssignment_2_1(), "rule__ArrayJsonOption__OptionAssignment_2_1");
					put(grammarAccess.getJsonOptionAccess().getIdAssignment_1_2(), "rule__JsonOption__IdAssignment_1_2");
					put(grammarAccess.getJsonOptionAccess().getTextAssignment_4(), "rule__JsonOption__TextAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.json.ui.contentassist.antlr.internal.InternalJsonParser typedParser = (org.json.ui.contentassist.antlr.internal.InternalJsonParser) parser;
			typedParser.entryRuleJsonPollSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JsonGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JsonGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
